// Generated by CoffeeScript 2.5.1
var FieldConflictError, FieldDependencyError, InvalidValueError, MissingFieldError;

module.exports.MissingFieldError = MissingFieldError = (function() {
  class MissingFieldError {
    constructor(field) {
      this.name = 'MissingFieldError';
      this.message = `Mandatory field \`${field}\` is missing`;
      Error.captureStackTrace(this);
    }

  };

  MissingFieldError.prototype = new Error();

  MissingFieldError.prototype.constructor = MissingFieldError;

  return MissingFieldError;

}).call(this);

module.exports.FieldConflictError = FieldConflictError = (function() {
  class FieldConflictError {
    constructor(field1, field2) {
      this.name = 'FieldConflictError';
      this.message = `Fields \`${field1}\` and \`${field2}\` can't be both present`;
      Error.captureStackTrace(this);
    }

  };

  FieldConflictError.prototype = new Error();

  FieldConflictError.prototype.constructor = FieldConflictError;

  return FieldConflictError;

}).call(this);

module.exports.FieldDependencyError = FieldDependencyError = (function() {
  class FieldDependencyError {
    constructor(field1, field2) {
      this.name = 'FieldDependencyError';
      this.message = `Field \`${field1}\` is missing and \`${field2}\` requires ` + "it to exist";
      Error.captureStackTrace(this);
    }

  };

  FieldDependencyError.prototype = new Error();

  FieldDependencyError.prototype.constructor = FieldDependencyError;

  return FieldDependencyError;

}).call(this);

module.exports.InvalidValueError = InvalidValueError = (function() {
  class InvalidValueError {
    constructor(field, value, expected) {
      this.name = 'InvalidValueError';
      this.message = `Field \`${field}\` has value \"${value}\", expected ` + `value to be in ${expected.join(', ')}`;
      Error.captureStackTrace(this);
    }

  };

  InvalidValueError.prototype = new Error();

  InvalidValueError.prototype.constructor = InvalidValueError;

  return InvalidValueError;

}).call(this);
